 USE master
GO

CREATE DATABASE [Салон красоты]
GO

USE [Салон красоты]
--Добавлние таблицы Администратор
CREATE TABLE Администратор(
	ID int IDENTITY(1,1) NOT NULL,
	ФИО varchar(50) NOT NULL,
	Пароль varchar(50) NOT NULL,
	Статус varchar(20) check (Статус = 'работает' or Статус = 'не работает')NOT NULL,
	CONSTRAINT PK_Администратор PRIMARY KEY (ID),
)
    GO
--Добавлние таблицы Направление
CREATE TABLE Направление(
	ID int IDENTITY(1,1) NOT NULL,
	Название varchar(50)NOT NULL,
    CONSTRAINT PK_Направление PRIMARY KEY (ID),
    CONSTRAINT Unique_Направление UNIQUE (Название)    
    )
    GO
--Добавлние таблицы Должность
CREATE TABLE Должность(
	ID int IDENTITY(1,1) NOT NULL,
	Название varchar(50)NOT NULL,
    CONSTRAINT PK_Должность PRIMARY KEY (ID),
    CONSTRAINT Unique_Должность UNIQUE (Название)    
    )
    GO
--Добавлние таблицы Услуга
CREATE TABLE Услуга(
	ID int IDENTITY(1,1) NOT NULL,
	ID_Направление int NOT NULL,
	Название varchar(50) NOT NULL,
	Стоимость decimal(18, 0) NOT NULL,
	Длительность int,
	Статус varchar(20) check (Статус = 'актуально' or Статус = 'не актуально'),
	CONSTRAINT PK_Услуга PRIMARY KEY (ID),	
	CONSTRAINT Unique_Услуга UNIQUE (Название),   
	CONSTRAINT FK_ID_Направление FOREIGN KEY (ID_Направление)
		REFERENCES Направление(ID)
	)
	GO 
--Добавлние таблицы День недели
CREATE TABLE [День недели](
	ID int IDENTITY(1,1) NOT NULL,
	Название varchar(50)NOT NULL,
    CONSTRAINT PK_День_недели PRIMARY KEY (ID),
    CONSTRAINT Unique_День_недели UNIQUE (Название)    
    )
	GO 
--Добавлние таблицы Мастер
CREATE TABLE Мастер(
	ID int IDENTITY(1,1) NOT NULL,
	ФИО varchar(50) NOT NULL,
	ID_Должность int  NOT NULL,
	Статус varchar(20) check (Статус = 'работает' or Статус = 'не работает'),
	Процедур int default(0)
	CONSTRAINT PK_Мастер PRIMARY KEY (ID),
	CONSTRAINT FK_ID_Должность FOREIGN KEY (ID_Должность)
	REFERENCES Должность(ID)
)
    GO
--Добавлние таблицы Рассписание
CREATE TABLE Расписание(
	ID int IDENTITY(1,1) NOT NULL,
	ID_День_недели int NOT NULL,
	ID_Мастера int NOT NULL,
	[Начало рабочего дня] time NOT NULL,
	[Конец рабочего дня] time NOT NULL,
    CONSTRAINT PK_Расписание PRIMARY KEY (ID),
    CONSTRAINT FK_ID_День_недели FOREIGN KEY (ID_День_недели)
	REFERENCES [День недели](ID),   
    CONSTRAINT FK_ID_Мастер FOREIGN KEY (ID_Мастера)
	REFERENCES Мастер(ID),
	UNIQUE (ID_День_недели, ID_Мастера)
    )
    GO
--Добавлние таблицы Клиент
CREATE TABLE Клиент(
	ID int IDENTITY(1,1) NOT NULL,
	ФИО varchar(50) NOT NULL,
	[Номер телефона]varchar(20) NOT NULL,
	Процедур int,
	CONSTRAINT PK_Клиент PRIMARY KEY (ID)
)
    GO
--Добавлние таблицы Запись
CREATE TABLE Запись(
	ID int IDENTITY(1,1) NOT NULL,
	ID_Расписание int NOT NULL,
	ID_Услуга int NOT NULL,
    ID_Клиент int NOT NULL,
    Дата date NOT NULL,
	Начало time NOT NULL,
	Статус varchar(20) check (Статус = 'готово' or Статус = 'не готово'),
    CONSTRAINT PK_Запись PRIMARY KEY (ID),
    CONSTRAINT FK_ID_Расписание FOREIGN KEY (ID_Расписание)
	REFERENCES Расписание(ID),   
    CONSTRAINT FK_ID_Клиент FOREIGN KEY (ID_Клиент)
	REFERENCES Клиент(ID),
    CONSTRAINT FK_ID_Услуга2 FOREIGN KEY (ID_Услуга)
	REFERENCES Услуга(ID),     
    )
    GO
--Добавлние таблицы Чек
CREATE TABLE Чек(
    ID int IDENTITY(1,1) NOT NULL,
    Дата datetime,
    Скидка decimal(18, 0) default(0) NOT NULL,
    Итог decimal(18, 0) default(0) NOT NULL,
    Наличными decimal(18, 0) NOT NULL,
    Сдача decimal(18, 0) default(0),
    ID_Запись int default(null),
    ID_Мастер int,
	ID_Услуга int,
    ID_Клиент int,
    ID_Администратор int NOT NULL,
    CONSTRAINT PK_Чек PRIMARY KEY (ID),
    CONSTRAINT FK_ID_Мастер4 FOREIGN KEY (ID_Мастер)
	REFERENCES Мастер(ID),   
    CONSTRAINT FK_ID_Клиент2 FOREIGN KEY (ID_Клиент)
	REFERENCES Клиент(ID),
    CONSTRAINT FK_ID_Услуга3 FOREIGN KEY (ID_Услуга)
	REFERENCES Услуга(ID),  
	CONSTRAINT FK_ID_Запись FOREIGN KEY (ID_Запись)
	REFERENCES Запись(ID),
	CONSTRAINT FK_ID_Администратор FOREIGN KEY (ID_Администратор)
	REFERENCES Администратор(ID)
)
    GO
 --Заполнение----------------------------------------------------------------------
 INSERT INTO Администратор
VALUES
('Макарова Галина Тимофеевна', '1', 'работает')
,('1', '1', 'работает')
GO
 INSERT INTO Направление
VALUES
('Парикхмахерские услуги для женщин'),
('Ногтевой сервис для женщин'),
('Брови'),
('Ресницы'),
('Макияж')
GO
 INSERT INTO Должность
VALUES
('Мастер парикхмахерских услуг для женщин'),
('Мастер ногтевого сервиса для женщин'),
('Мастер по бровям'),
('Мастер по ресницам'),
('Мастер по макияжу')
GO
INSERT INTO Услуга
VALUES
(1, 'Стрижка', 35, 60, 'актуально' ),
(1, 'Коррекция чёлки', 14, 30, 'актуально'),
(1, 'Коррекция кончиков волос', 14, 30, 'актуально'),
(1, 'Термострижка', 42, 150, 'актуально'),
(1, 'Окрашивание', 49, 210, 'актуально'),
(1, 'Мелирование', 57, 210, 'актуально'),
(1, 'Укладка волос', 29, null, 'актуально'),
(1, 'Выпраямление', 60, 150, 'актуально'),
(1, 'Прическа вечерняя', 60, 60, 'актуально'),
(1, 'Прическа свадебная', 100, 120, 'актуально'),
(1, 'Мытьё + сушка', 15, null, 'актуально'),
(1, 'Стрижка детская (девочки)', 14, 60, 'актуально'),
(2, 'Аппаратный маникюр', 32, 120, 'актуально'),
(2, 'Аппаратный маникюр + долговременнае покрытие', 50, 120, 'актуально'),
(2, 'Классический маникюр', 32, 120, 'актуально'),
(2, 'Классический маникюр + долговременнае покрытие', 50, 120, 'актуально'),
(2, 'Аппаратный педикюр', 41, 120, 'актуально'),
(2, 'Аппаратный педикюр + долговременнае покрытие', 61, 120, 'актуально'),
(2, 'Кислотный педикюр', 44,  120, 'актуально'),
(2, 'Кислотный педикюр + долговременнае покрытие', 64, 120, 'актуально'),
(2, 'Классический педикюр', 41,  120, 'актуально'),
(2, 'Классический педикюр + долговременнае покрытие', 61, 120, 'актуально'),
(2, 'Наращивание ногтей', 84, 120, 'актуально'),
(2, 'Наращивание ногтей френч', 94, 120, 'актуально'),
(2, 'Коррекция нарощенных ногтей', 74, 120, 'актуально'),
(2, 'Коррекция нарощенных ногтей френч', 84, 120, 'актуально'),
(3, 'Коррекция бровей', 23, 60, 'актуально'),
(3, 'Окрашивание бровей краской', 27, 30, 'актуально'),
(3, 'Окрашивание бровей хной', 27, 30, 'актуально'),
(3, 'Долговременная укладка бровей', 40, null, 'актуально'),
(4, 'Окрашивание ресниц краской', 27, 30, 'актуально'),
(4, 'Окрашивание ресниц хной', 27, 30, 'актуально'),
(4, 'Наращивание ресниц (классика)', 60, 150, 'актуально'),
(4, 'Наращивание ресниц (2D)', 70, 150, 'актуально'),
(4, 'Наращивание ресниц (3D)', 80, 180, 'актуально'),
(4, 'Снятие нарощенных ресниц', 20, null, 'актуально'),
(5, 'Экспресс-макияж', 65, 60, 'актуально'),
(5, 'Вечерний макияж', 90, 60, 'актуально'),
(5, 'Свадебный макияж', 110, 120, 'актуально')
GO
 INSERT INTO  [День недели]
VALUES
('Воскресение'),
('Понедельник'),
('Вторник'),
('Среда'),
('Четверг'),
('Пятница'),
('Суббота')
GO
 INSERT INTO Мастер
VALUES
('Гришкина Майя Константиновна', 1, 'работает', 1),
('Юхтрица Аза Владиленовна', 2, 'работает', 1),
('Клименко Римма Юлиевна', 3, 'работает', 1),
('Логвинова Изольда Казимировна', 4, 'работает', 7),
('Кузаева Влада Якововна', 5, 'работает', 6),
('Тюленева Майя Константиновна', 1, 'работает', 5),
('Лескова Ольга Германовна', 2, 'работает', 1),
('Зыкова Сандра Лаврентьевна', 3, 'работает', 3),
('Меркушева Мэри Тарасовна', 4, 'работает', 1),
('Зыкова Сандра Лаврентьевна', 5, 'работает', 1)
GO
 INSERT INTO Расписание
VALUES
--пон
(2, 1, '10:00', '19:00'),
(2, 2, '10:00', '19:00'),
(2, 3, '10:00', '19:00'),
(2, 4, '10:00', '19:00'),
(2, 5, '10:00', '19:00'),
--вт
(3, 1, '10:00', '19:00'),
(3, 2, '10:00', '19:00'),
(3, 3, '10:00', '19:00'),
(3, 4, '10:00', '19:00'),
(3, 5, '10:00', '19:00'),
--ср
(4, 6, '10:00', '19:00'),
(4, 7, '10:00', '19:00'),
(4, 8, '10:00', '19:00'),
(4, 9, '10:00', '19:00'),
(4, 10, '10:00','19:00'),
--чт
(5, 6, '10:00', '19:00'),
(5, 7, '10:00', '19:00'),
(5, 8, '10:00', '19:00'),
(5, 9, '10:00', '19:00'),
(5, 10, '10:00','19:00'),
--пт
(6, 1, '10:00', '20:00'),
(6, 2, '10:00', '20:00'),
(6, 3, '10:00', '20:00'),
(6, 4, '10:00', '20:00'),
(6, 5, '10:00', '20:00'),
--сб
(7, 6, '10:00', '20:00'),
(7, 7, '10:00', '20:00'),
(7, 8, '10:00', '20:00'),
(7, 9, '10:00', '20:00'),
(7, 10, '10:00', '20:00'),
--вс
(1, 1, '10:00', '20:00'),
(1, 7, '10:00', '20:00'),
(1, 8, '10:00', '20:00'),
(1, 4, '10:00', '20:00'),
(1, 10, '10:00', '20:00')
GO

 INSERT INTO Клиент
VALUES
('Урбановская Таисия Евстигнеевна', '+375445153351', 10),
('Черникова Кристина Зиновьевна', '+375337287611', 11),
('Моисеева Марта Максимовна', '+375297653351', 10),
('Низенькая Нина Лаврентиевна', '+375445153351', 1),
('Штельмах Бронислава Леонидовна', '+375295114951', 1),
('Травкина Инга Федотовна', '+375251075351', 1),
('Водолеева Любава Степановна', '+375251074764', 1)
GO
----INSERT
---- 1) Триггер на добавление записи
CREATE TRIGGER [Запрет на добавление записи] ON Запись
for insert, update
as
if exists
(
	SELECT *  
    FROM         dbo.Запись INNER JOIN
                      dbo.Расписание ON dbo.Запись.ID_Расписание = dbo.Расписание.ID INNER JOIN
                      dbo.Услуга ON dbo.Запись.ID_Услуга = dbo.Услуга.ID INNER JOIN
                      dbo.Клиент ON dbo.Запись.ID_Клиент = dbo.Клиент.ID INNER JOIN
                      dbo.Мастер ON dbo.Расписание.ID_Мастера = dbo.Мастер.ID INNER JOIN
                      dbo.Должность ON dbo.Мастер.ID_Должность = dbo.Должность.ID INNER JOIN
                      dbo.Направление ON dbo.Услуга.ID_Направление = dbo.Направление.ID
    WHERE      (DATEPART(w, dbo.Запись.Дата)  != dbo.Расписание.ID_День_недели) or (dbo.Направление.ID != dbo.Должность.ID)--or
    --                  (dbo.Запись.Начало > DATEADD(mi, - dbo.Услуга.Длительность, dbo.Расписание.[Конец рабочего дня]))
 )
 begin
 RAISERROR ('Нельзя добавить запись',0,0);
 rollback transaction 
 end
 go
 
 
 CREATE TRIGGER Чек_триггер ON Чек
for insert, update
as	
	update   dbo.Чек 
	set      Чек.ID_Мастер = Мастер.ID
			,Чек.ID_Клиент = Запись.ID_Клиент
			,Чек.ID_Услуга = Запись.ID_Услуга
	FROM     dbo.Чек INNER JOIN
			 dbo.Запись ON dbo.Чек.ID_Запись = dbo.Запись.ID INNER JOIN
			 dbo.Расписание ON dbo.Запись.ID_Расписание = dbo.Расписание.ID INNER JOIN
			 dbo.Мастер ON dbo.Расписание.ID_Мастера = dbo.Мастер.ID
    WHERE    ID_Запись != 0
    
	update   dbo.Чек 
	set      dbo.Чек.Скидка = 20
    FROM     dbo.Чек INNER JOIN
             dbo.Клиент ON dbo.Чек.ID_Клиент = dbo.Клиент.ID
	WHERE    dbo.Клиент.Процедур > 9
	
	update   dbo.Чек 
	set      dbo.Чек.Итог = Услуга.Стоимость *  Чек.Скидка / 100
    FROM     dbo.Чек INNER JOIN
             dbo.Услуга ON dbo.Чек.ID_Услуга = dbo.Услуга.ID
	WHERE    Чек.Скидка != 0
	
	update   dbo.Чек 
	set      dbo.Чек.Итог = Стоимость
    FROM     dbo.Чек INNER JOIN
             dbo.Услуга ON dbo.Чек.ID_Услуга = dbo.Услуга.ID
	WHERE    Чек.Скидка = 0

	update   dbo.Чек 
	set      dbo.Чек.Сдача = Чек.Наличными - Чек.Итог
---------------------------------------------------------------------------------------
                      
if exists
(
	select Чек.Сдача
	from Чек
	WHERE dbo.Чек.Сдача < 0
)
	 begin
	 RAISERROR ('Ошибка при состалении чека.',0,0);
	 rollback transaction 
	 end
if exists
(
   SELECT *
   FROM         dbo.Чек INNER JOIN
                dbo.Мастер ON dbo.Чек.ID_Мастер = dbo.Мастер.ID INNER JOIN
                dbo.Должность ON dbo.Мастер.ID_Должность = dbo.Должность.ID INNER JOIN
                dbo.Услуга ON dbo.Чек.ID_Услуга = dbo.Услуга.ID INNER JOIN
                dbo.Направление ON dbo.Услуга.ID_Направление = dbo.Направление.ID
   WHERE	    Направление.ID != Должность.ID
     
)
	 begin
	 RAISERROR ('Ошибка при состалении чека.',0,0);
	 rollback transaction 
	 end

GO
create view Услуга_представление AS 
(
	SELECT    dbo.Услуга.ID,
			  dbo.Услуга.Название AS Услуга, 
			  dbo.Направление.Название AS Направление, 
			  dbo.Услуга.Стоимость, 
			  dbo.Услуга.Длительность
	FROM      dbo.Услуга INNER JOIN
			  dbo.Направление ON dbo.Услуга.ID_Направление = dbo.Направление.ID
    WHERE     dbo.Услуга.Статус = 'актуально'
)
go
create view Мастер_представление AS 
(
   SELECT     dbo.Мастер.ID, dbo.Мастер.ФИО, dbo.Должность.Название AS Должность, Мастер.Процедур, dbo.Мастер.Статус
   FROM       dbo.Мастер INNER JOIN
              dbo.Должность ON dbo.Мастер.ID_Должность = dbo.Должность.ID
   WHERE      dbo.Мастер.Статус = 'работает'
)
go

create view Запись_представление AS 
(
	SELECT    dbo.Запись.ID, dbo.Запись.Дата, dbo.Запись.Начало, dbo.Услуга.Длительность, dbo.Услуга.Стоимость, dbo.Услуга.Название AS Услуга, 
			  dbo.Направление.Название AS Направление, dbo.Мастер.ФИО AS [Мастер ФИО], dbo.Должность.Название AS Должность, dbo.Клиент.ФИО AS [Клиент ФИО], 
			  dbo.Клиент.[Номер телефона]
	FROM      dbo.Запись INNER JOIN
			  dbo.Услуга ON dbo.Запись.ID_Услуга = dbo.Услуга.ID INNER JOIN
			  dbo.Направление ON dbo.Услуга.ID_Направление = dbo.Направление.ID INNER JOIN
			  dbo.Расписание ON dbo.Запись.ID_Расписание = dbo.Расписание.ID INNER JOIN
			  dbo.[День недели] ON dbo.Расписание.ID_День_недели = dbo.[День недели].ID INNER JOIN
			  dbo.Мастер ON dbo.Расписание.ID_Мастера = dbo.Мастер.ID INNER JOIN
			  dbo.Должность ON dbo.Мастер.ID_Должность = dbo.Должность.ID INNER JOIN
			  dbo.Клиент ON dbo.Запись.ID_Клиент = dbo.Клиент.ID
	WHERE     (dbo.Запись.Статус = 'не готово')
)
go
create view Расписание_представление AS 
(
	SELECT    dbo.Мастер.ФИО, dbo.Должность.Название AS Должность, dbo.[День недели].Название AS [День недели], dbo.Расписание.[Начало рабочего дня], 
			  dbo.Расписание.[Конец рабочего дня]
	FROM      dbo.Расписание INNER JOIN
			  dbo.[День недели] ON dbo.Расписание.ID_День_недели = dbo.[День недели].ID INNER JOIN
			  dbo.Мастер ON dbo.Расписание.ID_Мастера = dbo.Мастер.ID INNER JOIN
			  dbo.Должность ON dbo.Мастер.ID_Должность = dbo.Должность.ID
	WHERE     dbo.Мастер.Статус = 'работает'
)
go
create view [Представление для добавления записи] AS 
(
	SELECT    dbo.[День недели].Название + ', ' + dbo.Мастер.ФИО AS Добавление, dbo.[День недели].Название, Мастер.ФИО, Расписание.ID
	FROM      dbo.Расписание INNER JOIN
			  dbo.[День недели] ON dbo.Расписание.ID_День_недели = dbo.[День недели].ID INNER JOIN
			  dbo.Мастер ON dbo.Расписание.ID_Мастера = dbo.Мастер.ID INNER JOIN
			  dbo.Должность ON dbo.Мастер.ID_Должность = dbo.Должность.ID
	WHERE     dbo.Мастер.Статус = 'работает'
)
go
create view Чек_представление AS 
(
SELECT     dbo.Чек.ID, dbo.Администратор.ФИО AS Кассир, dbo.Чек.Дата, dbo.Услуга.Название AS Услуга, dbo.Направление.Название AS Направление, 
                      dbo.Услуга.Стоимость, dbo.Чек.Скидка, dbo.Чек.Итог, dbo.Чек.Наличными, dbo.Чек.Сдача, dbo.Мастер.ФИО AS Мастер, dbo.Должность.Название AS Должность, 
                      dbo.Клиент.ФИО AS Клиент
FROM         dbo.Чек INNER JOIN
                      dbo.Мастер ON dbo.Чек.ID_Мастер = dbo.Мастер.ID INNER JOIN
                      dbo.Услуга ON dbo.Чек.ID_Услуга = dbo.Услуга.ID INNER JOIN
                      dbo.Должность ON dbo.Мастер.ID_Должность = dbo.Должность.ID INNER JOIN
                      dbo.Направление ON dbo.Услуга.ID_Направление = dbo.Направление.ID INNER JOIN
                      dbo.Клиент ON dbo.Чек.ID_Клиент = dbo.Клиент.ID INNER JOIN
                      dbo.Администратор ON dbo.Чек.ID_Администратор = dbo.Администратор.ID
)
go

create view [Отчет по прибыли салона] AS 
(
	SELECT     COUNT(Чек.ID) AS Процедур, MONTH(Чек.Дата) AS Месяц, YEAR(Чек.Дата) AS Год, SUM (Чек.Итог) as Итог
	FROM       Чек
	GROUP BY  MONTH(Чек.Дата), YEAR(Чек.Дата)
)
go
CREATE VIEW [Отчет по работе мастеров] AS
(
	SELECT     dbo.Мастер.ФИО, dbo.Должность.Название AS Должность, COUNT(dbo.Чек.ID) AS Процедур, MONTH(dbo.Чек.Дата) AS Месяц, YEAR(dbo.Чек.Дата) AS Год
	FROM         dbo.Чек INNER JOIN
						  dbo.Мастер ON dbo.Чек.ID_Мастер = dbo.Мастер.ID INNER JOIN
						  dbo.Должность ON dbo.Мастер.ID_Должность = dbo.Должность.ID
	GROUP BY dbo.Мастер.ФИО, MONTH(dbo.Чек.Дата), YEAR(dbo.Чек.Дата), dbo.Должность.Название
)
go
CREATE VIEW [Отчет по оказанным услугам] AS
(
	SELECT     COUNT(dbo.Чек.ID) AS Процедур, dbo.Услуга.Название AS Услуга, MONTH(dbo.Чек.Дата) AS Месяц, YEAR(dbo.Чек.Дата) AS Год
	FROM         dbo.Чек INNER JOIN
						  dbo.Услуга ON dbo.Чек.ID_Услуга = dbo.Услуга.ID
	GROUP BY MONTH(dbo.Чек.Дата), YEAR(dbo.Чек.Дата), dbo.Услуга.Название
)
go
INSERT INTO Запись
VALUES
(1, 1, 1, '2020-12-14','15:00', 'не готово')
go
INSERT INTO Запись 
VALUES (1, 1, 3, '2020-11-23','15:00', 'не готово')
go
INSERT INTO Запись
VALUES
(5, 38, 5, '2020-11-02','15:00', 'не готово')
go
INSERT INTO Запись
VALUES
(5, 38, 5, '2020-11-02','15:00', 'не готово')
go
INSERT INTO Чек 
VALUES (GETDATE(), 0, 0, '100', 0, null, 1, 2, 3, 2);
go
INSERT INTO Чек 
VALUES (GETDATE(), 0, 0, '100', 0, null, 6, 6, 7, 2);
go
INSERT INTO Чек 
VALUES ('2020-11-10', 0, 0, '100', 0, null, 6, 9, 7, 2);
go
INSERT INTO Чек 
VALUES ('2020-10-12', 0, 0, '100', 0, null, 1, 11, 1, 2);
go
INSERT INTO Чек 
VALUES ('2020-11-14', 0, 0, '100', 0, null, 6, 8, 6, 2);
go
INSERT INTO Чек 
VALUES ('2020-11-18', 0, 0, '100', 0, null, 6, 8, 7, 2);
go
INSERT INTO Чек 
VALUES ('2020-11-19', 0, 0, '100', 0, null, 2, 20, 7, 2);
go
INSERT INTO Чек 
VALUES ('2020-10-13', 0, 0, '100', 0, null, 2, 21, 1, 2);
go
INSERT INTO Чек 
VALUES ('2020-12-01', 0, 0, '100', 0, null, 2, 25, 7, 2);
go
INSERT INTO Чек 
VALUES ('2020-12-15', 0, 0, '100', 0, null, 3, 30, 4, 2);
go